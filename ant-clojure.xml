<?xml version="1.0" encoding="UTF-8"?>
<project>
    <!--==============
    dependency library
    ==================

    ==Clojure==
    http://mvnrepository.com/artifact/org.clojure/clojure

    ===============-->

    <!--===========
    initial section
    ============-->
    <fail unless="clojure.lib">property 'clojure.lib' not set</fail>
    <property name="clojre.jar" value="${clojure.lib}/clojure.jar"/>
    <available property="exist.clojure.jar" file="${clojure.jar}"/>
    <echo unless:set="exist.clojure.jar">please call 'retrieve' task first</echo>

    <!--========
    task defined
    =========-->
    <macrodef name="clojure">
        <attribute name="dir" default="${basedir}"/>
        <attribute name="failonerror" default="false"/>
        <element name="custom" optional="true" implicit="true"/>
        <sequential>
            <java classname="clojure.main"
                  dir="@{dir}"
                  failonerror="@{failonerror}"
                  fork="true">
                <classpath path="${clojure.jar}"/>
                <custom/>
            </java>
        </sequential>
    </macrodef>
    <macrodef name="clojure-eval">
        <attribute name="dir" default="${basedir}"/>
        <attribute name="outputproperty" default="clojure.output"/>
        <attribute name="failonerror" default="false"/>
        <element name="custom" optional="true" implicit="true"/>
        <text name="text"/>
        <sequential>
            <java classname="clojure.main"
                  dir="@{dir}"
                  outputproperty="@{outputproperty}"
                  failonerror="@{failonerror}"
                  fork="true">
                <classpath path="${clojure.jar}"/>
                <arg value="--eval"/>
                <arg value="@{text}"/>
                <custom/>
            </java>
        </sequential>
    </macrodef>
</project>
