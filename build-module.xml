<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:unless="ant:unless">

    <fail if="define.module">'module' has been imported</fail>
    <property name="define.module" value=""/>

    <!--=========
    global define
    ==========-->
    <property name="ant.root" value=".ant"/>
    <property name="build.dir" value="build"/>

    <!--========
    macro define
    =========-->

    <macrodef name="module">
        <attribute name="name"/>
        <attribute name="dir" default="@{name}"/>
        <attribute name="antfile" default="build.xml"/>
        <attribute name="antroot" default="${ant.root}"/>
        <attribute name="target"/>
        <element name="properties" optional="true" implicit="true"/>
        <sequential>
            <echo>Build module @{name}</echo>
            <ant antfile="@{antfile}" dir="@{dir}" target="@{target}">
                <property name="ant.root" value="../@{antroot}"/>
                <property name="build.dir" value="../${build.dir}/@{name}"/>
                <properties/>
            </ant>
        </sequential>
    </macrodef>

    <macrodef name="module-jar">
        <attribute name="name"/>
        <attribute name="dir" default="@{name}"/>
        <attribute name="antfile" default="build.xml"/>
        <attribute name="antroot" default="${ant.root}"/>
        <attribute name="target" default="jar"/>
        <attribute name="jarfile" default="@{name}.jar"/>
        <attribute name="depends" default="" description="addition dependency"/>
        <attribute name="propertyfile" default=""/>
        <element name="properties" optional="true" implicit="true"/>
        <sequential>
            <echo>Build module @{name}</echo>
            <property name="module.@{name}.jar" value="${build.dir}/@{name}/jar/@{jarfile}"/>
            <script language="javascript"><![CDATA[
                var p = self.getProject();
                var target = self.getOwningTarget();
                var set = new java.util.HashSet();
                for (var e = target.getDependencies(); e.hasMoreElements();) {
                    var dep = e.nextElement();
                    var cp = p.getProperty('module.' + dep + '.classpath');
                    var jar = p.getProperty('module.' + dep + '.jar');
                    if (cp != null) set.add(cp);
                    if (jar != null) set.add('../' + jar);
                }
                for each (var dep in '@{depends}'.split(',')) {
                    if (dep.isEmpty()) continue;
                    var cp = p.getProperty('module.' + dep + '.classpath');
                    var jar = p.getProperty('module.' + dep + '.jar');
                    if (cp != null) set.add(cp);
                    if (jar != null) {
                        set.add('../' + jar);
                    } else {
                        var fail = p.createTask('fail');
                        fail.setMessage('module @{name} require ' + dep + ' should be a module');
                        fail.perform();
                    }
                }
                p.setProperty('module.@{name}.classpath', java.lang.String.join(':', set));
            ]]></script>
            <condition property="module.@{name}.propertyfile.empty">
                <equals arg1="@{propertyfile}" arg2="" trim=""/>
            </condition>
            <ant antfile="@{antfile}" dir="@{dir}" target="@{target}">
                <property name="ant.root" value="../@{antroot}"/>
                <property name="build.dir" value="../${build.dir}/@{name}"/>
                <property name="jar.file" value="@{jarfile}"/>
                <property name="compile.classpath" value="${module.@{name}.classpath}"/>
                <property file="@{propertyfile}" unless:set="module.@{name}.propertyfile.empty"/>
                <properties/>
            </ant>
        </sequential>
    </macrodef>

    <!--=================
    help document section
    ===================-->
    <target name="-help-general">
        <echo>Usage : ant TASK</echo>
        <echo/>
    </target>
    <target name="-help-task">
        <script language="javascript"><![CDATA[
            var p = self.getProject();
            var targets = p.getTargets(); //HashTable String -> Target
            var map = new java.util.HashMap();
            print ('TARGETS');
            for (var target in targets) {
                if (target.isEmpty()) continue;
                var name = target;
                if (name.contains('.')) {
                    name = name.substring(name.indexOf('.') + 1);
                    if (name.startsWith('-')) continue;
                    if (map.containsKey(name)) continue;
                } else {
                    if (name.startsWith('-')) continue;
                }
                map.put(name, targets[target].getDescription());
            }
            var list = new java.util.ArrayList(map.keySet());
            list.sort(null);
            for each (var name in list) print (name + ' \t: ' + map[name]);
        ]]></script>
    </target>
    <extension-point name="-help-extend"/>
    <target name="help" depends="-help-general,-help-task,-help-extend" description="list task and help document"/>

</project>