<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:jacoco="antlib:org.jacoco.ant">
    <target name="-def-macro-jacoco-report">
        <macrodef name="macro-coverage-report">
            <attribute name="srcdir"/>
            <attribute name="class"/>
            <attribute name="result"/>
            <attribute name="report"/>
            <sequential>
                <mkdir dir="@{report}"/>
                <jacoco:report>
                    <executiondata>
                        <file file="@{result}/jacoco.exec"/>
                    </executiondata>
                    <structure name="Project">
                        <classfiles>
                            <fileset dir="@{class}"/>
                        </classfiles>
                        <sourcefiles encoding="UTF-8">
                            <fileset dir="@{srcdir}"/>
                        </sourcefiles>
                    </structure>
                    <html destdir="@{report}"/>
                </jacoco:report>
            </sequential>
        </macrodef>
    </target>
    <target name="-def-macro-coverage-java">
        <macrodef name="macro-coverage-java">
            <attribute name="result"/>
            <element name="custom" implicit="true"/>
            <sequence>
                <fail unless="main.class">Must set main.class</fail>
                <jacoco:coverage destfile="@{result}/jacoco.exec">
                    <java classname="${main.class}"
                          fork="true">
                        <custom/>
                    </java>
                </jacoco:coverage>
            </sequence>
        </macrodef>
    </target>
    <target name="-def-macro-coverage-test">
        <macrodef name="macro-coverage-test">
            <attribute name="result"/>
            <element name="custom" implicit="true"/>
            <sequential>
                <mkdir dir="@{result}"/>
                <jacoco:coverage destfile="@{result}/jacoco.exec">
                    <junit fork="true"
                           forkmode="once">
                        <test name="${test.class}"/>
                        <custom/>
                    </junit>
                </jacoco:coverage>
            </sequential>
        </macrodef>
    </target>
</project>