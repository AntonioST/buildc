<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:if="ant:if"
         xmlns:unless="ant:unless">

    <!--===============
    Directory Structure
    ===================
    .
    ├ test          ${test.dir}
    ├ lib           ${lib.dir}
    │ └ test        ${lib.test.dir}
    └ build         ${build.dir}
      ├ classes     ${build.classes.dir}
      └ test        ${build.test.dir}
        ├ classes   ${test.classes.dir}
        └ result    ${test.result.dir}

    properties
    test.force : force do test
    ================-->

    <!--===========
    import checking
    ============-->
    <fail unless="define.java">should import 'build-java.xml'</fail>
    <fail if="define.test">'test' has imported</fail>
    <property name="define.test" value=""/>

    <include file="ant-classpath.xml"/>

    <!--====================
    custom extension section
    =====================-->
    <extension-point name="-post-test-init"/>
    <extension-point name="-pre-compile-test"/>
    <extension-point name="-post-compile-test"/>
    <extension-point name="-pre-test"/>
    <extension-point name="-post-test"/>

    <!--==============
    task define : init
    ===============-->
    <target name="-test-init-property" depends="init">
        <property name="test.dir" value="test"/>
        <available property="exist.test" file="${test.dir}" type="dir"/>
        <fail unless="exist.test">directory ${test.dir} doesn't exist</fail>
        <property name="build.test.dir" value="${build.dir}/test"/>
        <property name="test.classes.dir" value="${build.test.dir}/classes"/>
        <property name="test.result.dir" value="${build.test.dir}/result"/>
        <echo level="verbose">build.test.dir=${build.test.dir}</echo>
        <echo level="verbose">test.classes.dir=${test.classes.dir}</echo>
        <echo level="verbose">test.result.dir=${test.result.dir}</echo>
    </target>
    <target name="-test-init-classpath" depends="init-classpath,-test-init-property">
        <property name="lib.test.dir" value="${lib.dir}/test"/>
        <resolve-classpath property="real.test.classpath" dir="${lib.test.dir}">
            <pathelement path="${classpath}" if:set="classpath"/>
            <pathelement path="${master.classpath}" if:set="master.classpath"/>
            <pathelement path="${compile.classpath}" if:set="compile.classpath"/>
            <pathelement path="${runtime.classpath}" if:set="runtime.classpath"/>
            <pathelement path="${test.classpath}" if:set="test.classpath"/>
        </resolve-classpath>
    </target>
    <target name="-test-init" depends="-test-init-classpath,-post-test-init"/>
    <target name="-echo-test-classpath" depends="-test-init-classpath" extensionOf="-echo-classpath-extend">
        <pathconvert property="real.test.classpath" refid="real.test.classpath.ref"/>
        <echo>real.test.classpath=${real.test.classpath}</echo>
    </target>

    <!--======================
    task define : compile test
    =======================-->
    <target name="-compile-test-prepare" depends="-compile-prepare,-def-macro-javac,-test-init,-pre-compile-test"/>
    <target name="-compile-test" depends="compile,-compile-test-prepare">
        <macro-javac src="${test.dir}"
                     dest="${test.classes.dir}">
            <classpath path="${build.classes.dir}"/>
            <classpath refid="real.test.classpath.ref"/>
        </macro-javac>
    </target>
    <target name="-compile-test-class" depends="compile,-compile-test-prepare">
        <fail unless="class">Must set 'class'</fail>
        <to-file-path property="tmp.compile.test.class" value="${class}"/>
        <macro-javac src="${test.dir}"
                     dest="${test.classes.dir}"
                     includes="${tmp.compile.test.class}">
            <classpath path="${build.classes.dir}"/>
            <classpath refid="real.test.classpath.ref"/>
        </macro-javac>
    </target>
    <target name="compile-test" depends="-compile-test,-post-compile-test"
            description="compile test class"/>
    <target name="compile-test-class" depends="-compile-test-class,-post-compile-test"
            description="compile single test class or a package"/>

    <!--==============
    task define : run
    ===============-->
    <target name="run-test-class" depends="compile-test-class"
            description="run test class">
        <fail unless="class">Must set 'class'</fail>
        <java classname="${class}"
              fork="true"
              failonerror="flase">
            <classpath path="${real.test.classpath}"/>
            <classpath path="${build.classes.dir}"/>
            <classpath path="${test.classes.dir}"/>
            <classpath path="${res.dir}"/>
            <jvmarg line="${java.jvmargs}" if:set="java.jvmargs"/>
            <arg line="${program.args}" if:set="program.args"/>
        </java>
    </target>

    <!--======================
    task define : check tested
    =======================-->
    <target name="-test-last-pre" depends="compile-test">
        <uptodate property="test.lasttest" unless:set="test.force">
            <srcresources>
                <fileset dir="${src.dir}"/>
                <fileset dir="${test.dir}"/>
            </srcresources>
            <mapper type="merge" to="${build.test.dir}/.test"/>
        </uptodate>
    </target>

    <target name="-test-last-post">
        <tstamp>
            <format property="test.time.stamp" pattern="yyyy/MM/dd-HH:mm:ss"/>
        </tstamp>
        <echo output="${build.test.dir}/.test">last test : ${test.time.stamp}</echo>
    </target>

    <target name="-test-check" extensionOf="-post-test">
        <fail if="test.fail">test fail</fail>
    </target>

</project>