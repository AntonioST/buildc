<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:jacoco="antlib:org.jacoco.ant"
         xmlns:if="ant:if"
         xmlns:unless="ant:unless">

    <!--===============
    Directory Structure
    ===================
    .
    ├ src           ${src.dir}
    ├ res           ${res.dir}
    ├ lib           ${lib.dir}
    │ ├ runtime     ${lib.runtime.dir}
    │ └ test        ${lib.test.dir}
    └ build         ${build.dir}
      ├ jacoco      ${build.coverage.dir}
      │ ├ jacoco.exec   ${coverage.result.file}
      │ └ report    ${coverage.report.dir}
      ├ classes     ${build.classes.dir}
      └ test
        ├ classes   ${build.test.dir}
        └ result    ${test.result.dir}


    ================-->

    <!--==============
    dependence library
    ==================

    ==org.jacoco.ant==
    http://mvnrepository.com/artifact/org.jacoco/org.jacoco.ant

    ===============-->

    <!--===========
    import checking
    ============-->
    <fail unless="define.java">should import 'build-java.xml'</fail>
    <property name="define.coverage" value="jacoco"/>

    <!--===========
    initial section
    ============-->
    <property name="build.coverage.dir" value="${build.dir}/jacoco"/>
    <property name="coverage.report.type" value="html"/>

    <!--=================
    Help Document Section
    ==================-->
    <target name="-help-coverage" extensionOf="-help-extend">
        <echo>coverage            : run program and profiling coverage</echo>
        <echo>coverage-class      : run single main class and profiling coverage</echo>
        <echo>coverage-test       : run test and profiling coverage</echo>
        <echo>coverage-test-class : run single test and profiling coverage</echo>
    </target>

    <!--==================
    task define : coverage
    ===================-->
    <target name="-coverage-init">
        <mkdir dir="${build.coverage.dir}"/>
        <property name="coverage.result.file" value="${build.coverage.dir}/jacoco.exec"/>
        <property name="coverage.report.dir" value="${build.coverage.dir}/report"/>
    </target>
    <target name="-coverage-main" depends="-run-config,-run-init,-coverage-init">
        <fail unless="main.class">Must set 'main.class'</fail>
        <jacoco:coverage destfile="${coverage.result.file}">
            <java classname="${main.class}"
                  fork="true"
                  failonerror="false">
                <classpath refid="real.runtime.classpath"/>
                <classpath path="${build.classes.dir}"/>
                <classpath path="${res.dir}"/>
                <jvmarg line="${java.jvmargs}" if:set="java.jvmargs"/>
                <arg line="${program.args}" if:set="program.args"/>
            </java>
        </jacoco:coverage>
    </target>
    <target name="-coverage-class" depends="-run-init,-coverage-init">
        <fail unless="class">Must set 'class'</fail>
        <jacoco:coverage destfile="${coverage.result.file}">
            <java classname="${class}"
                  fork="true"
                  failonerror="false">
                <classpath refid="real.runtime.classpath"/>
                <classpath path="${build.classes.dir}"/>
                <classpath path="${res.dir}"/>
                <jvmarg line="${java.jvmargs}" if:set="java.jvmargs"/>
                <arg line="${program.args}" if:set="program.args"/>
            </java>
        </jacoco:coverage>
    </target>
    <target name="-coverage-test" depends="-test-init,-coverage-init">
        <jacoco:coverage destfile="${coverage.result.file}">
            <marco-test if:set="define.test.junit">
                <batchtest todir="${test.result.dir}" >
                    <fileset dir="${test.dir}"/>
                </batchtest>
            </marco-test>
            <marco-test if:set="define.test.junitng">
                <xmlfileset refid="testng.xml.fileset" if:set="testng.xml.fileset"/>
                <classfileset dir="${build.test.dir}" includes="**/*.class" unless:set="testng.xml.fileset"/>
            </marco-test>
        </jacoco:coverage>
    </target>
    <target name="-coverage-test-class" depends="-test-init,-coverage-init">
        <fail unless="class">Must set 'class'</fail>
        <jacoco:coverage destfile="${coverage.result.file}">
            <marco-test if:set="define.test.junit">
                <test name="${class}"
                      todir="${test.result.dir}"/>
            </marco-test>
            <marco-test if:set="define.test.junitng">
                <classfileset dir="${build.test.dir}" includes="**/${class}.class"/>
            </marco-test>
        </jacoco:coverage>
    </target>

    <!--================
    task define : report
    =================-->
    <target name="-coverage-report" depends="-coverage-init">
        <!--check report type-->
        <fail if="coverage.report.type.html">property 'coverage.report.type.html' is used</fail>
        <fail if="coverage.report.type.xml">property 'coverage.report.type.xml' is used</fail>
        <fail if="coverage.report.type.csv">property 'coverage.report.type.csv' is used</fail>
        <condition property="coverage.report.type.html">
            <equals arg1="coverage.report.type" arg2="html"/>
        </condition>
        <condition property="coverage.report.type.xml">
            <equals arg1="coverage.report.type" arg2="xml"/>
        </condition>
        <condition property="coverage.report.type.csv">
            <equals arg1="coverage.report.type" arg2="csv"/>
        </condition>
        <!--check report file-->
        <available property="exist.coverage.result" file="${coverage.result.file}"/>
        <fail unless="exist.coverage.result">Coverage Result File doesn't exist</fail>
        <!--report-->
        <mkdir dir="${coverage.result.file}"/>
        <jacoco:report>
            <executiondata>
                <file file="${coverage.result.file}"/>
            </executiondata>
            <structure name="Project">
                <classfiles>
                    <fileset dir="${build.classes.dir}"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${src.dir}"/>
                </sourcefiles>
            </structure>
            <html destdir="${coverage.report.dir}" if:set="coverage.report.type.html"/>
            <xml destdir="${coverage.report.dir}"  if:set="coverage.report.type.xml"/>
            <csv destdir="${coverage.report.dir}"  if:set="coverage.report.type.csv"/>
        </jacoco:report>
    </target>

    <!--=======
    task define
    ========-->
    <target name="coverage" depends="-coverage-main,-post-run,-coverage-report" if="define.application"/>
    <target name="coverage-class" depends="-coverage-class,-post-run,-coverage-report" if="define.application"/>
    <target name="coverage-test" depends="-coverage-test,-post-test,-coverage-report" if="define.test"/>
    <target name="coverage-test-class" depends="-coverage-test-class,-post-test,-coverage-report" if="define.test"/>
</project>
